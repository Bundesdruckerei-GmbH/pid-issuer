<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2024-2025 Bundesdruckerei GmbH
    For the license see the accompanying file LICENSE.MD.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>de.bdr.pidi</groupId>
    <artifactId>pidi</artifactId>
    <version>1.6.1</version>
    <name>pidi</name>
    <description>PID Issuer</description>
    <inceptionYear>2024</inceptionYear>
    <properties>
        <!-- language versions -->
        <java.version>21</java.version>
        <kotlin.version>2.1.0</kotlin.version>
        <kotlinx.version>1.7.3</kotlinx.version>

        <!-- dependency versions -->
        <spring-cloud.version>2023.0.4</spring-cloud.version>
        <oid4vc-library.version>0.15.1-RC1</oid4vc-library.version>
        <mdoc-sdk-library.version>0.20.0-RC4</mdoc-sdk-library.version>
        <panstar-sdk.version>4.0.3</panstar-sdk.version>
        <google-zxing.version>3.5.3</google-zxing.version>
        <swagger-annotations.version>2.2.27</swagger-annotations.version>
        <spring-modulith.version>1.3.1</spring-modulith.version>
        <jmolecules.version>2023.2.1</jmolecules.version>
        <logback-encoder.version>8.0</logback-encoder.version>
        <oauth2-oidc-sdk.version>11.20.1</oauth2-oidc-sdk.version>
        <nimbus-jose-jwt.version>9.48</nimbus-jose-jwt.version>
        <org.mapstruct.version>1.6.3</org.mapstruct.version>
        <junit-pioneer.version>2.3.0</junit-pioneer.version>

        <!-- panstar 2.3.2 shipped with guava 31.1 which has CVE-2020-8908  and  CVE-2018-10237
             panstar 4.0.2 declares guava 32.1.3, but that does not seem to work -->
        <guava.version>33.4.0-jre</guava.version>

        <!-- plugin version definitions -->
        <jruby.version>9.2.20.1</jruby.version>
        <xray-junit-extension.version>0.9.0</xray-junit-extension.version>
        <owasp-dependency.version>10.0.4</owasp-dependency.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <pitest-maven.version>1.17.3</pitest-maven.version>
        <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
        <license.maven.plugin.version>4.6</license.maven.plugin.version>
        <openapi.version>7.10.0</openapi.version>
        <asciidoctor-maven-plugin.version>3.1.1</asciidoctor-maven-plugin.version>
        <jsonschema2pojo-maven-plugin.version>1.2.2</jsonschema2pojo-maven-plugin.version>

        <!-- other settings -->
        <test.groups>!(remote|restdocEid)</test.groups>
        <skip.dependency-check-maven>true</skip.dependency-check-maven>
        <dependency.check.report.dir>target/dependency-check</dependency.check.report.dir>
        <sonar.dependencyCheck.jsonReportPath>${dependency.check.report.dir}/dependency-check-report.json
        </sonar.dependencyCheck.jsonReportPath>
        <sonar.dependencyCheck.htmlReportPath>${dependency.check.report.dir}/dependency-check-report.html
        </sonar.dependencyCheck.htmlReportPath>
        <sonar.sources>src/main/java,src/main/resources/templates,pom.xml</sonar.sources>
        <sonar.tests>src/test/java</sonar.tests>
        <sonar.junit.reportPaths>target/surefire-reports/</sonar.junit.reportPaths>
        <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.cpd.exclusions>src/main/java/de/bdr/pidi/authorization/in/*Controller.java,src/main/java/de/bdr/pidi/authorization/core/flows/*FlowController.java</sonar.cpd.exclusions>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-starter-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-actuator</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-observability</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jmolecules</groupId>
            <artifactId>jmolecules-hexagonal-architecture</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jmolecules</groupId>
            <artifactId>jmolecules-ddd</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logback-encoder.version}</version>
            <!-- Use runtime scope if the project does not have any compile-time usage of logstash-logback-encoder,
                 such as usage of StructuredArguments/Markers or implementations such as
                 JsonProvider, AppenderListener, JsonFactoryDecorator, JsonGeneratorDecorator, etc
            -->
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>de.bdr.openid4vc</groupId>
            <artifactId>openid4vci</artifactId>
            <version>${oid4vc-library.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>de.bdr.openid4vc</groupId>
                    <artifactId>status-list</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- CVE-2024-49580 in de.bdr.openid4vc 0.15.0, can be removed when ktor is updated in the dependent library -->
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-core-jvm</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-json-jvm</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-content-negotiation-jvm</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-serialization-jvm</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-serialization-kotlinx-json-jvm</artifactId>
            <version>3.0.3</version>
        </dependency>
        <!-- /CVE-2024-49580 -->
        <dependency>
            <groupId>de.bdr.openid4vc</groupId>
            <artifactId>openid4vci-sdjwtvc</artifactId>
            <version>${oid4vc-library.version}</version>
        </dependency>
        <dependency>
            <groupId>de.bdr.openid4vc</groupId>
            <artifactId>openid4vci-mdoc</artifactId>
            <version>${oid4vc-library.version}</version>
        </dependency>
        <dependency>
            <groupId>de.bundesdruckerei.mdoc.kotlin</groupId>
            <artifactId>mdoc-core-jvm</artifactId>
            <version>${mdoc-sdk-library.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcpkix-jdk15on</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcutil-jdk15on</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>1.79</version>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>oauth2-oidc-sdk</artifactId>
            <version>${oauth2-oidc-sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Kotlin part -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-json-jvm</artifactId>
            <version>${kotlinx.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>${google-zxing.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>${google-zxing.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>${nimbus-jose-jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>de.governikus.panstar.sdk</groupId>
            <artifactId>panstar-saml-sdk</artifactId>
            <version>${panstar-sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- prevent double definition of JSON -->
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-webtestclient</artifactId>
            <!--version>${project.version}</version-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-web-test-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit-pioneer</groupId>
            <artifactId>junit-pioneer</artifactId>
            <version>${junit-pioneer.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>app.getxray</groupId>
            <artifactId>xray-junit-extensions</artifactId>
            <version>${xray-junit-extension.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <version>1.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmolecules.integrations</groupId>
            <artifactId>jmolecules-archunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents.core5</groupId>
            <artifactId>httpcore5-reactive</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-cbor</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.modulith</groupId>
                <artifactId>spring-modulith-bom</artifactId>
                <version>${spring-modulith.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.jmolecules</groupId>
                <artifactId>jmolecules-bom</artifactId>
                <version>${jmolecules.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
              The cbor library is included in two different versions,
              both are dependencies of openid4vc-common library.
              Maven has no problems to resolve the correct one, but
              IntelliJ needs this exclusion of the outdated variant.
            -->
            <dependency>
                <groupId>com.augustcellars.cose</groupId>
                <artifactId>cose-java</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>com.upokecenter</groupId>
                        <artifactId>cbor</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!-- transitive dependency of de.governikus.panstar.sdk -->
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>
            <!-- to prevent doubled Jaxb implementation -->
            <dependency>
                <groupId>de.governikus.panstar.sdk</groupId>
                <artifactId>panstar-utils</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <compilerPlugins>
                        <plugin>kotlinx-serialization</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-serialization</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${project.parent.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>
                            -Amapstruct.defaultComponentModel=spring
                        </arg>
                        <arg>
                            -Amapstruct.defaultInjectionStrategy=constructor
                        </arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by Maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by Maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi.version}</version>
                <executions>
                    <execution>
                        <id>generate-info</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/eid.openapi.json</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>de.bdr.pidi.identification.in.api</apiPackage>
                            <modelPackage>de.bdr.pidi.identification.in.model</modelPackage>
                            <modelNamePrefix>Eid</modelNamePrefix>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <languageSpecificPrimitives>boolean</languageSpecificPrimitives>
                            <typeMappings>Boolean=boolean</typeMappings>
                            <configOptions>
                                <additionalModelTypeAnnotations>
                                    @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
                                </additionalModelTypeAnnotations>
                                <additionalApiTypeAnnotations>
                                    @Deprecated
                                </additionalApiTypeAnnotations>
                                <useSpringBoot3>true</useSpringBoot3>
                                <oas3>true</oas3>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useSpringfox>false</useSpringfox>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <dateLibrary>java8</dateLibrary>
                                <openApiNullable>false</openApiNullable>
                                <interfaceOnly>true</interfaceOnly>
                                <performBeanValidation>true</performBeanValidation>
                                <useDocumentationAnnotations>false</useDocumentationAnnotations>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-mock-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.basedir}/src/test/resources/mock.openapi.json</inputSpec>
                            <output>${project.build.directory}/generated-test-sources/openapi</output>
                            <generatorName>java</generatorName>
                            <apiPackage>de.bdr.pidi.eidauthmock.client.api</apiPackage>
                            <modelPackage>de.bdr.pidi.eidauthmock.client.model</modelPackage>
                            <modelNamePrefix>EidAuthMock</modelNamePrefix>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <languageSpecificPrimitives>boolean</languageSpecificPrimitives>
                            <typeMappings>Boolean=boolean</typeMappings>
                            <library>restclient</library>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <generateBuilders>true</generateBuilders>
                                <additionalModelTypeAnnotations>
                                    @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
                                </additionalModelTypeAnnotations>
                                <additionalApiTypeAnnotations>
                                    @Deprecated
                                </additionalApiTypeAnnotations>
                                <useSpringBoot3>true</useSpringBoot3>
                                <oas3>true</oas3>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useSpringfox>false</useSpringfox>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <dateLibrary>java8</dateLibrary>
                                <openApiNullable>false</openApiNullable>
                                <interfaceOnly>true</interfaceOnly>
                                <performBeanValidation>true</performBeanValidation>
                                <useDocumentationAnnotations>false</useDocumentationAnnotations>
                                <webclientBlockingOperations>true</webclientBlockingOperations>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <append>true</append>
                    <dumpOnExit>true</dumpOnExit>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <groups>${test.groups}</groups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest-maven.version}</version>
                <configuration>
                    <timestampedReports>false</timestampedReports>
                    <outputFormats>
                        <outputFormat>XML</outputFormat>
                        <outputForma>HTML</outputForma>
                    </outputFormats>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${pitest-junit5-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html</backend>
                            <doctype>book</doctype>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.restdocs</groupId>
                        <artifactId>spring-restdocs-asciidoctor</artifactId>
                        <version>${spring-restdocs.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.outputDirectory}/static/docs
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>
                                        ${project.build.directory}/generated-docs
                                    </directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jsonschema2pojo</groupId>
                <artifactId>jsonschema2pojo-maven-plugin</artifactId>
                <version>${jsonschema2pojo-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceDirectory>${basedir}/docs/api/schema</sourceDirectory>
                    <fileExtensions>schema.json</fileExtensions>
                    <targetPackage>de.bdr.pidi.issuance.out.revoc.model</targetPackage>
                    <includeJsr303Annotations>true</includeJsr303Annotations>
                    <useJakartaValidation>true</useJakartaValidation>
                    <includeConstructors>true</includeConstructors>
                    <serializable>true</serializable>
                    <dateTimeType>java.time.Instant</dateTimeType>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>full</name>
                </property>
            </activation>
        </profile>
        <profile>
            <id>jacoco</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>jacoco</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <jvmArguments>${argLine}</jvmArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
